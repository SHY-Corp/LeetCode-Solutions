class Solution {
public:
    void dfs(vector<vector<int>>& adj, vector<int>& vis, int i){
        vis[i]=1;
        for(auto j:adj[i]){
            if(!vis[j]) dfs(adj, vis, j);
        }
    }
    int makeConnected(int n, vector<vector<int>>& connections) {
        int m=connections.size();
        if(m<n-1) return -1;
        vector<vector<int>>adj(n);
        for(int i=0; i<m; i++){
            adj[connections[i][0]].push_back(connections[i][1]);
            adj[connections[i][1]].push_back(connections[i][0]);
        }
        int p=0;
        vector<int>vis(n);
        for(int i=0; i<n; i++){
            if(!vis[i]){
                p++;
                dfs(adj, vis, i);
            }
        }
        return p-1;
    }
};
