/*Given two strings A and B of lowercase letters, return true if you can swap two letters in A so the result is equal to B, otherwise, return false.

Swapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at A[i] and A[j]. For example, swapping at indices 0 and 2 in "abcd" results in "cbad".

 

Example 1:

Input: A = "ab", B = "ba"
Output: true
Explanation: You can swap A[0] = 'a' and A[1] = 'b' to get "ba", which is equal to B.
Example 2:

Input: A = "ab", B = "ab"
Output: false
Explanation: The only letters you can swap are A[0] = 'a' and A[1] = 'b', which results in "ba" != B.
Example 3:

Input: A = "aa", B = "aa"
Output: true
Explanation: You can swap A[0] = 'a' and A[1] = 'a' to get "aa", which is equal to B.
Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
Example 5:

Input: A = "", B = "aa"
Output: false
 

Constraints:

0 <= A.length <= 20000
0 <= B.length <= 20000
A and B consist of lowercase letters.*/

class Solution {
    public boolean buddyStrings(String A, String B) {
        
        int pos1=0,pos2=0,count=0;
        if(A.length()!=B.length())
         return false;
        for(int i=0;i<A.length();i++)
        {
          if(A.charAt(i)!=B.charAt(i))  
          {
              if(count==0)
              {
                  pos1=i;
                  count++;
               }
              else
              {
                  pos2=i;
                  count++;
                  break;
                }
          }
          }
        boolean b;
        if(count==2)
        {
       
        if(pos2==A.length()-1)    
        {
           
            if(pos1+1!=pos2)
          A=A.substring(0,pos1)+Character.toString(A.charAt(pos2))+A.substring(pos1+1,pos2)+ Character.toString(A.charAt(pos1));
            else
             A=A.substring(0,pos1)+Character.toString(A.charAt(pos2))+ Character.toString(A.charAt(pos1));   
       
          
        }
            else
            {
                
                 if(pos1+1!=pos2)
                A=A.substring(0,pos1)+Character.toString(A.charAt(pos2))+A.substring(pos1+1,pos2)+ Character.toString(A.charAt(pos1))+A.substring(pos2+1);
                else
                   A=A.substring(0,pos1)+Character.toString(A.charAt(pos2))+Character.toString(A.charAt(pos1))+A.substring(pos2+1);  
                
        }
         b=A.equals(B);  
         
      }
       else 
       if(count==1)
       {
        b=false;
       }
        
      else
      {
          if(A.length()<2)
          {
             b=false;
          }
          else
          {
              b=false;
              loop:
           for(int i=0;i<A.length();i++)
               for(int j=i+1;j<A.length();j++)
               if(A.charAt(i)==A.charAt(j))
               {
                   b=true;
                   break loop;
                }
          }
      }
       
        
      return b;  
        
    }
}
